{"version":3,"sources":["Components/sing-up/sing-up.component.jsx","Pages/Homepage/Homepage.jsx","Components/sign-in/sign-in.component.jsx","Components/Header/Header.jsx","Pages/asset-details/Asset-details.component.jsx","Pages/personal-details/Personal-details.component.jsx","Pages/Dashboard/Dashboard.component.jsx","Pages/NewApplication/Termloan.modal.jsx","Pages/NewApplication/NewApplication.component.jsx","Pages/asset-details/Asset-details-new.component.jsx","Pages/KYC/verifyaadhar.component.jsx","Pages/KYC/kyc.component.jsx","Pages/DocumentUpload/docupload.component.jsx","Pages/Summary/summary.component.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Signup","props","handleChange","e","setState","target","name","value","console","log","state","handleSubmit","chkbx","password","cpassword","length","alert","email","uid","fetch","api","method","headers","body","then","response","json","data","setToken","setUser","bind","Form","className","Group","as","Row","controlId","Label","column","sm","style","color","Col","Control","type","onChange","this","placeholder","id","onClick","class","React","Component","Homepage","document","title","user","browserHistory","push","Container","fluid","height","textAlign","src","Signin","handleClose","show","closemodal","refresh","fail","Modal","onHide","Header","closeButton","Title","Body","Alert","hidden","key","variant","Footer","Button","logout","localStorage","removeItem","isauth","location","showsignin","token","Navbar","collapseOnSelect","expand","bg","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Divider","fname","Adetails","i","preventDefault","User","lname","dob","phone","getCurrentDate","mi","cbal","sbal","sec","perprop","re","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","Token","backgroundColor","boxShadow","onSubmit","Pdetails","Dashboard","apps","newapp","showmodal","logstate","map","typeconv","freqconv","position","top","Table","striped","bordered","hover","size","app","TermLoan","close","multiplier","duration","total","custom","setDuration","HBLoan","propdetails","addr","val","obj","loantype","setstate","rows","InputGroup","Prepend","Text","FormControl","VHLoan","dname","Check","inline","label","NewApplication","a","loanamt","installment","toFixed","frequency","setappid","AppID","vehiclemake","setloantype","propsetstate","newstate","dur","showterm","showhb","showvh","durationdisable","inst","width","marginTop","xs","fontSize","float","disabled","min","max","lg","paddingTop","Typea","ann_inc","debt_mutual_funds","equity_mutual_funds","other_mutual_funds","padding","Typeb","comp_bonds","reason","VerifyAadhar","otp","required","verified","Kyc","fetchdetails","resp","addrline1","street","number","city","district","PIN","postcode","slice","caddrline1","ccity","cdistrict","cstate","cPIN","savedetails","FormData","append","addrline2","caddrline2","isadharverified","setverified","verifypan","pan","fetched","getElementById","aadharverified","verifyaadhaar","aadhaar","verifypassport","passport","span","offset","DocUpload","addressproof","photo","uploadData","match","files","accept","Summary","cnfrm","record","kyclableconv","kycinfo","docs","docfetched","addrproof","Spinner","animation","Status","paddingBottom","plaintext","readOnly","Type","Loanamt","Duration","Frequency","Installment","marginLeft","marginRight","App","appid","setPdetails","details","setItem","tok","getItem","paddingLeft","paddingRight","history","exact","path","component","complete","pdetails","Boolean","window","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.f8c3630c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Container, Nav, NavDropdown, Row, Col, Form} from 'react-bootstrap'\r\nimport {Redirect} from 'react-router-dom';\r\nimport './sing-up.styles.css'\r\nimport {browserHistory} from 'react-router'\r\n\r\n\r\n\r\n\r\nclass Signup extends React.Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            email: \"\",\r\n            password: \"\",\r\n            cpassword: \"\",\r\n            uid: \"\",\r\n            \r\n            chkbx: \"off\"\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        // console.log(\"uid=\"+this.state.uid+\"&\"+\"email=\"+this.state.email+\"&\"+\"password=\"+this.state.password)\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        if(this.state.chkbx !== \"on\")\r\n        {\r\n            alert(\"Please accept terms of service.\")\r\n            return;\r\n        }\r\n        if(this.state.password !== this.state.cpassword)\r\n        {\r\n            alert(\"Passwords don't match. Please try again.\")\r\n            return;\r\n        }\r\n        if(this.state.password.length < 8)\r\n        {\r\n            alert(\"Password should be atleast 8 characters long.\")\r\n            return;\r\n        }\r\n\r\n        if(this.state.email == \"\")\r\n        {\r\n            alert(\"Please enter your email\")\r\n            return;\r\n        }\r\n        if(this.state.uid == \"\")\r\n        {\r\n            alert(\"Please enter your UID\")\r\n            return;\r\n        }\r\n\r\n\r\n        // console.log(JSON.stringify(this.state))\r\n        fetch(this.props.api+'/signup', {\r\n                                                method: 'post',\r\n                                                headers: {\r\n                                                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                },\r\n                                                body: \"uid=\"+this.state.uid+\"&\"+\"email=\"+this.state.email+\"&\"+\"password=\"+this.state.password\r\n                                            })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data['Status'] == 'OK')\r\n            {\r\n                this.props.setToken(\"Token\" + data['Token'])\r\n                this.props.setUser(data['User'])\r\n            }\r\n            else{\r\n                alert(\"Sign-up failed.\")\r\n            }\r\n        })\r\n        \r\n        \r\n        \r\n\r\n    }\r\n\r\n\r\n        render()\r\n        { \r\n    return (\r\n            <Form className=\"sign-up\">\r\n\r\n                        <h2 className=\"form-heading\">Get Started</h2>\r\n                        \r\n                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                            <Form.Label column sm=\"3\" style={{color: \"#ffffff\"}}>\r\n                            Email\r\n                            </Form.Label>\r\n                            <Col sm=\"9\">\r\n                            <Form.Control type=\"email\" name=\"email\" onChange={this.handleChange} placeholder=\"email@example.com\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"uid\">\r\n                            <Form.Label column sm=\"3\" style={{color: \"#ffffff\"}}>\r\n                            UID\r\n                            </Form.Label>\r\n                            <Col sm=\"9\">\r\n                            <Form.Control type=\"text\" id=\"uid\" name=\"uid\" onChange={this.handleChange} placeholder=\"UID\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Form.Label column sm=\"3\" style={{color: \"#ffffff\"}}>\r\n                            Password\r\n                            </Form.Label>\r\n                            <Col sm=\"9\">\r\n                            <Form.Control type=\"password\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Form.Label column sm=\"3\" style={{color: \"#ffffff\"}}>\r\n                            Confirm Password\r\n                            </Form.Label>\r\n                            <Col sm=\"9\">\r\n                            <Form.Control type=\"password\" name=\"cpassword\" onChange={this.handleChange} placeholder=\"Confirm Password\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        \r\n\r\n                        \r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Col sm={3}></Col>\r\n                            <Col sm={9} style={{color: \"#ffffff\"}}>\r\n                                <input type=\"checkbox\" onChange={this.handleChange} name=\"chkbx\"/>\r\n                                I agree to the terms and conditions.\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                            <Col sm=\"3\">\r\n                            \r\n                            </Col>\r\n                            <Col sm=\"9\">\r\n                            <button type=\"button\" onClick={this.handleSubmit}  class=\"btn btn-primary btn-lg\" >GET YOUR LOAN NOW</button>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        \r\n                        \r\n                        \r\n                        </Form>\r\n                        \r\n        )\r\n        };\r\n}\r\n\r\nexport default Signup;","import React from 'react'\r\nimport {Container, Nav, NavDropdown, Row, Col, Form} from 'react-bootstrap'\r\nimport Signup from '../../Components/sing-up/sing-up.component'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {browserHistory} from 'react-router'\r\nimport './Homepage.css'\r\n\r\nconst Homepage = (props) =>\r\n{\r\n    document.title = \"Welcome To LoanAPP. Loans made easy.\"\r\n    if(props.user !== '')\r\n    {\r\n        browserHistory.push(\"/Pdetails\")\r\n    }\r\n    return (\r\n        <>\r\n        \r\n        <Container fluid className=\"main-ctr\">\r\n            <Row style={{height: \"100vh\"}}>\r\n                <Col sm={6} className=\"flex-container\">\r\n                    <div className=\"tagline\">\r\n                        <h2 className=\"heading\">\r\n                            Loans Made Easy\r\n                        </h2>\r\n                        \r\n                        <div className=\"tag-text\">\r\n                        We’ve simplified the process. Apply for our business loan in minutes, without painful paperwork or waiting in queues.\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col sm={6} className=\"form\">\r\n                    <Signup setToken={props.setToken} {...props} setUser={props.setUser} />\r\n                </Col>\r\n            \r\n            </Row>\r\n        </Container>\r\n\r\n        <Container fluid className=\"bottom-ctr\">\r\n            <Row>\r\n                <Col sm={12}>\r\n                    <div className=\"bottom-head\">\r\n                        How our business loans work\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={12}>\r\n                    <div className=\"bottom-desc\">\r\n                    We’ve simplified the process. Apply for our business loan in minutes, without painful paperwork or waiting in queues.\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        \r\n            <Row className=\"steplist\">\r\n                <Col sm={3} style={{textAlign: \"center\"}}>\r\n                    <img src=\"https://www.stopsignsandmore.com/images/product/medium/2322.gif\" />\r\n                    <h1 className=\"step-head\">Easy application</h1>\r\n\r\n                    <p className=\"step-desc\">Complete our online application. It’s quick, easy, and confidential</p>\r\n                </Col>\r\n                <Col sm={3} style={{textAlign: \"center\"}}>\r\n                    <img src=\"https://www.stopsignsandmore.com/images/product/medium/2322.gif\" />\r\n                    <h1 className=\"step-head\">Fast decision</h1>\r\n\r\n                    <p className=\"step-desc\">If You’re Pre-Approved, E-Sign your Application To Confirm Funds.</p>\r\n                </Col>\r\n                <Col sm={3} style={{textAlign: \"center\"}}>\r\n                    <img src=\"https://www.stopsignsandmore.com/images/product/medium/2322.gif\" />\r\n                    <h1 className=\"step-head\">Get Your Cash</h1>\r\n\r\n                    <p className=\"step-desc\">Cash Deposited To Your Bank Account As Quickly As The Next Business Day.</p>\r\n                </Col>\r\n                <Col sm={3} style={{textAlign: \"center\"}}>\r\n                    <img src=\"https://www.stopsignsandmore.com/images/product/medium/2322.gif\" />\r\n                    <h1 className=\"step-head\">Repay Your Loan</h1>\r\n\r\n                    <p className=\"step-desc\">The Original Amount & The Fees Will Be Debited From Your Bank Account.</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n          </>  \r\n        \r\n    )\r\n}\r\n\r\nexport default Homepage;","import React, {useState} from 'react'\r\nimport {Modal, Button, Row, Col, Form, Alert} from 'react-bootstrap'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Signin extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            show : false,\r\n            uid: \"\",\r\n            password: \"\",\r\n            fail: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({show: props.show});\r\n    }\r\n\r\n    handleClose = () =>\r\n    {\r\n        console.log(this.props)\r\n        this.setState({\r\n            show: false\r\n        })\r\n        this.props.closemodal()\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n    }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n      console.log(this.props.api+'/signin')\r\n      fetch(this.props.api+'/signin', {\r\n                                                method: 'post',\r\n                                                headers: {\r\n                                                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                },\r\n                                                body: \"uid=\"+this.state.uid+\"&password=\"+this.state.password\r\n                                            })\r\n                                            .then(response => response.json())\r\n                                            .then(data => {\r\n                                              if(data['Status'] == \"OK\"){\r\n                                              this.props.setToken(\"Token\" + data['Token'])\r\n                                              this.props.setUser(data['user'])\r\n                                              this.handleClose()\r\n                                              this.props.refresh()\r\n                                              }\r\n                                              else{\r\n                                                this.setState({\r\n                                                  fail: true\r\n                                                })\r\n                                              }\r\n                                              \r\n                                            }\r\n                                            )\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n      \r\n        return (\r\n        <Modal show={this.state.show}  onHide = {this.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Welcome Back...</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"sign-in-from\">\r\n            <center>Sign In To Your Account</center>\r\n            <hr/>\r\n            <Alert hidden={!this.state.fail} key=\"0\" variant=\"danger\">Login failed.</Alert>\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                <Form.Label column sm=\"3\" style={{color: \"#000000\"}}>\r\n                UID\r\n                </Form.Label>\r\n                <Col sm=\"9\">\r\n                <Form.Control type=\"text\" name=\"uid\" onChange={this.handleChange} placeholder=\"UID\" />\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                <Form.Label column sm=\"3\" style={{color: \"#000000\"}}>\r\n                Password\r\n                </Form.Label>\r\n                <Col sm=\"9\">\r\n                <Form.Control type=\"password\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" />\r\n                </Col>\r\n            </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n            Sign In\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n        );\r\n      \r\n}\r\n}\r\n\r\n\r\nexport default Signin;","import React from 'react';\r\nimport {Container, Nav, NavDropdown} from 'react-bootstrap'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Signin from '../sign-in/sign-in.component'\r\n\r\nclass Header extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.showsignin = this.showsignin.bind(this);\r\n        this.state = {\r\n            show: false,\r\n            user: '',\r\n            token: '',\r\n            isauth: false\r\n        }\r\n        this.logout = this.logout.bind(this)\r\n        this.closemodal = this.closemodal.bind(this)\r\n       // this.state.isauth = props.user !== \"\"\r\n        \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.setState({\r\n            user: this.props.user,\r\n            token: this.props.token,\r\n            isauth: this.props.token!==''\r\n        })\r\n    }\r\n\r\n    closemodal = () =>\r\n    {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n\r\n    logout = () =>\r\n    {\r\n        localStorage.removeItem('Token');\r\n        localStorage.removeItem('User');\r\n        this.setState({\r\n            isauth: false\r\n        })\r\n        this.props.refresh();\r\n        document.location = \"/\"\r\n        \r\n    }\r\n\r\n    \r\n    showsignin = () =>\r\n    {\r\n        this.setState({\r\n            show : true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n       \r\n   \r\n\r\n   componentDidUpdate()\r\n   {\r\n      if(this.state.user !== this.props.user)\r\n      {\r\n       this.setState({\r\n        user: this.props.user,\r\n        token: this.props.token,\r\n        isauth: this.props.token!==null\r\n       })\r\n    }\r\n\r\n       \r\n   }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n            \r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n                <Navbar.Brand href=\"/\">LoanApp</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#features\">How It Works</Nav.Link>\r\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                    <NavDropdown title=\"More\" id=\"collasible-nav-dropdown\">\r\n                    <NavDropdown.Item href=\"#action/3.1\">About</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">See Source</NavDropdown.Item>\r\n                </NavDropdown>\r\n                </Nav>\r\n                <Nav>\r\n                <Nav.Link hidden={this.state.isauth} onClick={this.showsignin}>Sign In</Nav.Link>\r\n                <Nav.Link hidden={!this.state.isauth}>Welcome {this.props.fname}</Nav.Link>\r\n                <Nav.Link hidden={!this.state.isauth} onClick={this.logout}>Logout</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n            \r\n            <Signin {...this.props} closemodal={this.closemodal} refresh={this.props.refresh} show={this.state.show} setUser={this.props.setUser} setToken={this.props.setToken}/>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react'\r\nimport {Container, Button, Row, Col, Form} from 'react-bootstrap'\r\nimport './Asset-details.styles.css'\r\nimport {browserHistory} from 'react-router'\r\n\r\n\r\n\r\n\r\n// NOT COMPLETE!!!!\r\n\r\nclass Adetails extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            mi: \"\",\r\n            cbal: \"\",\r\n            sbal: \"\",\r\n            sec: \"\",\r\n            perprop: \"\",\r\n            re: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    getCurrentDate(separator=''){\r\n\r\n        let newDate = new Date()\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        \r\n        return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\r\n        }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        \r\n        console.log(this.state)\r\n        for (var i in this.state)\r\n        {\r\n            if(this.state[i] == \"\")\r\n            {\r\n                alert(\"All values not provided.\");\r\n                return;\r\n            }\r\n        }\r\n        fetch(this.props.api+'/new_user', {\r\n                                                method: 'post',\r\n                                                headers: {\r\n                                                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                },\r\n                                                body: \"UID=\"+this.props.User+\"&Firstname=\"+this.props.fname+\"&Lastname=\"+this.props.lname+\r\n                                                \"&DOB=\"+this.props.dob+\r\n                                                \"&Phone=\"+this.props.phone+\r\n                                                \"&LastUpdated=\"+this.getCurrentDate('-')\r\n                                            })\r\n                                            .then(response => response.json())\r\n                                            .then(data => {\r\n                                                if(data['Status'] == 'OK')\r\n                                                {\r\n                                                browserHistory.push(\"/dashboard\")\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    alert(\"Error occured when calling db\")\r\n                                                }\r\n                                            })\r\n    }\r\n\r\n    \r\n    handleChange = (e) =>\r\n    {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        fetch(\"http://127.0.0.1:8000/get_usr/?UID=\"+this.props.User)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data['Status'] == 'OK')\r\n            {\r\n                browserHistory.push(\"/dashboard\")\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n\r\n        if(this.props.Token === \"\")\r\n        {\r\n            browserHistory.push(\"/\")\r\n        }\r\n        return (\r\n\r\n            \r\n            \r\n            <Container fluid style={{backgroundColor: \"#ffffff\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n            <Row style={{height: \"30vh\"}}>\r\n                <Col sm={12} className=\"heading-flex\">\r\n                    <h1 className=\"heading-text\">Enter Your Asset Details</h1>\r\n                </Col>\r\n                \r\n            \r\n            </Row>\r\n            <Row style={{height: \"70vh\"}}>\r\n                <Col sm={12} className=\"form-flex\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Monthly Income</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Monthly Income\" onChange={this.handleChange} name=\"mi\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label>Cash in Checking Accounts:</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Balance\" onChange={this.handleChange} name=\"cbal\"/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Cash in Savings Accounts:</Form.Label>\r\n                        <Form.Control placeholder=\"Balance\" onChange={this.handleChange} name=\"sbal\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Securities:</Form.Label>\r\n                        <Form.Control placeholder=\"Estimated Worth\" onChange={this.handleChange} name=\"sec\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Personal Property:</Form.Label>\r\n                        <Form.Control placeholder=\"Estimated Worth\" onChange={this.handleChange} name=\"perprop\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Real Estate:</Form.Label>\r\n                        <Form.Control placeholder=\"Estimated Worth\" onChange={this.handleChange} name=\"re\"/>\r\n                    </Form.Group>\r\n\r\n                    \r\n                   \r\n\r\n                    \r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Finish\r\n                        </Button>\r\n                        \r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Adetails;","import React from 'react'\r\nimport {Container, Button, Row, Col, Form} from 'react-bootstrap'\r\nimport './Personal-details.styles.css'\r\nimport {browserHistory} from 'react-router'\r\n\r\n\r\nclass Pdetails extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            fname: \"\",\r\n            lname: \"\",\r\n            phone: \"\",\r\n            dob: \"\"\r\n            \r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        fetch(this.props.api+\"/get_usr/?UID=\"+this.props.user)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data['Status'] == 'OK')\r\n            {\r\n                browserHistory.push(\"/dashboard\")\r\n            }\r\n        })\r\n        console.log(\"mounted\")\r\n        document.title = \"New User\"\r\n    }\r\n\r\n    getCurrentDate(separator=''){\r\n\r\n        let newDate = new Date()\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        \r\n        return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\r\n        }\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        \r\n        console.log(this.state)\r\n        for (var i in this.state)\r\n        {\r\n            if(this.state[i] == \"\")\r\n            {\r\n                alert(\"All values not provided.\");\r\n                return;\r\n            }\r\n        }\r\n        fetch(this.props.api+'/new_user', {\r\n                                                method: 'post',\r\n                                                headers: {\r\n                                                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                },\r\n                                                body: \"UID=\"+this.props.user+\"&Firstname=\"+this.state.fname+\"&Lastname=\"+this.state.lname+\r\n                                                \"&DOB=\"+this.state.dob+\r\n                                                \"&Phone=\"+this.state.phone+\r\n                                                \"&LastUpdated=\"+this.getCurrentDate('-')\r\n                                            })\r\n                                            .then(response => response.json())\r\n                                            .then(data => {\r\n                                                if(data['Status'] == 'OK')\r\n                                                {\r\n                                                this.props.refresh()\r\n                                                browserHistory.push(\"/dashboard\")\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    alert(\"Error occured when calling db\")\r\n                                                }\r\n                                            })\r\n    }\r\n\r\n\r\n    \r\n    handleChange = (e) =>\r\n    {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        if(this.props.token === \"\")\r\n        {\r\n            browserHistory.push(\"/\")\r\n        }\r\n        return (\r\n            \r\n            <Container fluid style={{backgroundColor: \"#ffffff\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n            <Row style={{height: \"30vh\"}}>\r\n                <Col sm={12} className=\"heading-flex\">\r\n                    <h1 className=\"heading-text\">Enter Your Personal Details</h1>\r\n                </Col>\r\n                \r\n            \r\n            </Row>\r\n            <Row style={{height: \"70vh\"}}>\r\n                <Col sm={12} className=\"form-flex\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"FirstName\" name=\"fname\" onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"LastName\" onChange={this.handleChange} name=\"lname\" />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control placeholder=\"10 digit Phone Number\" onChange={this.handleChange} name=\"phone\" />\r\n                    </Form.Group>\r\n\r\n                    \r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date Of Birth</Form.Label>\r\n                        <Form.Control type=\"date\" onChange={this.handleChange} name=\"dob\"/> \r\n                    </Form.Group>\r\n\r\n                    \r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Proceed To Next Step >>>\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pdetails;","import React from 'react';\r\nimport {Container, Nav, NavDropdown, Row, Col, Form, Button, Table} from 'react-bootstrap'\r\nimport './Dashboard.styles.css'\r\n\r\nimport {browserHistory} from 'react-router'\r\n\r\n\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            apps: [],\r\n            showmodal: false\r\n        }\r\n\r\n        this.typeconv = {\r\n            'PLoan': 'Personal',\r\n            'VH': 'Vehicle',\r\n            'HB': 'House',\r\n            'TERM': 'Term'\r\n        }\r\n        this.freqconv = {\r\n            '1': 'Monthly',\r\n            '4': 'Quartlery',\r\n            '6': 'Half Yearly',\r\n            '12': 'Yearly'\r\n        }\r\n\r\n        \r\n        \r\n        this.newapp = this.newapp.bind(this)\r\n        this.logstate = this.logstate.bind(this);\r\n        this.closemodal = this.closemodal.bind(this)\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    refresh = () =>\r\n    {\r\n        fetch(this.props.api+\"/get_rec_by_usr?UID=\"+this.props.User)\r\n        .then(response => response.json())\r\n        .then(\r\n            data => this.setState({apps: data['Record']})\r\n        )\r\n    }\r\n\r\n    newapp = () =>\r\n    {\r\n        // this.setState({\r\n        //     showmodal: true\r\n        // })\r\n        browserHistory.push(\"/newapp\")\r\n    }\r\n\r\n    closemodal = () =>\r\n    {\r\n        this.setState({\r\n            showmodal: false\r\n        })\r\n    }\r\n\r\n\r\n    logstate = () =>\r\n    {\r\n        this.state.apps.map(\r\n            data => console.log(data['AppID'])\r\n        )\r\n        // console.log(this.state.apps)\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        // fetch(this.props.api+'/get_rec_by_usr?UID=\"+this.props.User)\r\n        // .then(response => response.json())\r\n        // .then(\r\n        //     data => this.setState({apps: data['Record']})\r\n        // )\r\n        this.refresh()\r\n        document.title = \"Your Dashboard\"\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        if(this.props.Token === \"\")\r\n        {\r\n            browserHistory.push(\"/\")\r\n        }\r\n        \r\n        return (\r\n            <>\r\n            <Container fluid style={{height: \"100vh\", backgroundColor: \"#ffffff\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n                <Row style={{height: \"15vh\"}}>\r\n                    <Col sm=\"12\">\r\n                        <h1 style={{position: \"relative\", top: \"55px\"}}>Dashboard</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm=\"6\">\r\n                        <h2>Your Applications</h2>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                        \r\n                        <Button className=\"addnewbtn\" variant=\"primary\" onClick={this.newapp}>New Application</Button>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>Application ID</th>\r\n                    <th>Loan Amount (Lacs)</th>\r\n                    <th>Loan Type</th>\r\n                    <th>Frequency</th>\r\n                    <th>Installment (Lacs)</th>\r\n                    <th>Date Filed</th>\r\n                    <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.apps.map(\r\n                        app => (\r\n                            \r\n                    <tr>\r\n                    <td>{app['AppID']}</td>\r\n                    <td>{app['Loanamt']}</td>\r\n                    <td>{this.typeconv[app['Type']]}</td>\r\n                    <td>{this.freqconv[app['Frequency']]}</td>\r\n                    <td>{app['Installment']}</td>\r\n                    <td>{app['Datefiled']}</td>\r\n                    <td>{app['Status']}</td>\r\n                    </tr>\r\n\r\n\r\n                        )\r\n                    )}\r\n                    \r\n                </tbody>\r\n              {/* { console.log(this.state) } */}\r\n                </Table>\r\n\r\n                \r\n            </Container>\r\n\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;","import React, {useState} from 'react';\r\nimport {Container, Nav, NavDropdown, Row, Col, Form, Button, Table, DropdownButton, Dropdown,InputGroup, FormControl, Modal} from 'react-bootstrap'\r\n\r\nexport const TermLoan = (props) => {\r\n    const handleClose = () => props.close();\r\n    var multiplier = 30\r\n    var duration = 0\r\n    var total = 0\r\n    const handleChange = (e) => {\r\n        if(e.target.name !== \"dur\") {\r\n            multiplier = e.target.value\r\n            console.log(multiplier)\r\n        }\r\n        else{\r\n            duration = e.target.value\r\n        }\r\n    };\r\n    const handleSubmit = (e) => {\r\n        total = (multiplier * duration)/30\r\n        props.setDuration(total)\r\n        handleClose()\r\n\r\n    }\r\n  \r\n    return (\r\n      <>\r\n  \r\n        <Modal show={props.show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Term Loan</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n          <Form>\r\n            <Form.Row className=\"align-items-center\">\r\n                <Col sm={3} className=\"my-1\">\r\n                \r\n                <Form.Control\r\n                    as=\"select\"\r\n                    className=\"mr-sm-3\"\r\n                    id=\"inlineFormCustomSelect\"\r\n                    custom\r\n                    onChange={handleChange}\r\n                >\r\n                    \r\n                    <option value={30}>Months</option>\r\n                    <option value=\"365\">Years</option>\r\n                    <option value=\"1\">Days</option>\r\n                </Form.Control>\r\n                </Col>\r\n                <Col sm={9} className=\"my-1\">\r\n                <Form.Control onChange={handleChange} name=\"dur\" type=\"text\" />\r\n                </Col>\r\n            </Form.Row>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleSubmit}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\nexport const HBLoan = (props) => {\r\nconst handleClose = () => props.close();\r\nvar propdetails = \"\"\r\nvar addr = \"\"\r\nvar val = 0\r\n\r\nconst handleChange = (e) => {\r\n    switch(e.target.name)\r\n    {\r\n        case \"propdetails\" : propdetails=e.target.value; break;\r\n        case \"addr\" : addr=e.target.value; break;\r\n        case \"val\" : val=e.target.value; break;\r\n    }\r\n    \r\n    \r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(propdetails == \"\" || addr == \"\" || val == 0){\r\n        alert(\"Please enter all values\")\r\n        return\r\n    }\r\n\r\n    const obj = {\r\n        propdetails: propdetails,\r\n        addr: addr,\r\n        val: val,\r\n        loantype: \"HB\"\r\n    }\r\n    props.setstate(obj)\r\n    console.log(obj)\r\n    handleClose()\r\n}\r\n\r\nreturn (\r\n    <>\r\n\r\n    <Modal show={props.show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>House Building Loan</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n        <Form.Label>Property Details</Form.Label>\r\n        <Form.Control onChange={handleChange} name=\"propdetails\" as=\"textarea\" rows=\"3\" />\r\n        </Form.Group>\r\n        <Form.Group>\r\n        <Form.Label>Address</Form.Label>\r\n        <Form.Control onChange={handleChange} name=\"addr\" as=\"textarea\" />\r\n        </Form.Group>\r\n        <Form.Label>Valuation (Approx)</Form.Label>\r\n        <InputGroup className=\"mb-2 mr-sm-2\">\r\n        <InputGroup.Prepend>\r\n            <InputGroup.Text>$</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl onChange={handleChange} name=\"val\" />\r\n        </InputGroup>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Save Changes\r\n        </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n    </>\r\n);\r\n}\r\n\r\n\r\nexport const PLoan = (props) => {\r\nconst handleClose = () => props.close();\r\n\r\nreturn (\r\n    <>\r\n\r\n    <Modal show={props.show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Personal Loan</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n        </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n    </>\r\n);\r\n}\r\n\r\n\r\nexport const VHLoan = (props) => {\r\nconst handleClose = () => props.close();\r\nvar val = 0;\r\nvar dname = \"\";\r\nconst handleChange = (e) => {\r\n    switch(e.target.name)\r\n    {\r\n        case \"dname\" : dname=e.target.value; break;\r\n        case \"val\" : val=e.target.value; break;\r\n    }\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(val == 0 || dname == \"\"){\r\n        alert(\"Please enter all values\")\r\n        return\r\n    }\r\n    const obj = {\r\n        dname: dname,\r\n        val: val,\r\n        loantype: \"VH\"\r\n    }\r\n    props.setstate(obj)\r\n    console.log(obj)\r\n    handleClose()\r\n}\r\n\r\n\r\nreturn (\r\n    <>\r\n\r\n    <Modal show={props.show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Vehicle Loan</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n            <Form.Label>Dealer's Name</Form.Label>\r\n            <Form.Control name=\"dname\" onChange={handleChange} type=\"text\" />\r\n        </Form.Group>\r\n        \r\n        <Form.Label>Vehicle Make:</Form.Label>\r\n        <Form.Group>\r\n        \r\n            <Form.Check inline label=\"2-Wheeler\" type=\"radio\" name=\"make\"/>\r\n            <Form.Check inline label=\"3-Wheeler\" type=\"radio\" name=\"make\"/>\r\n            <Form.Check inline label=\"4-Wheeler\" type=\"radio\" name=\"make\"/>\r\n        </Form.Group>\r\n        <Form.Label>Current Value (Approx)</Form.Label>\r\n        <InputGroup className=\"mb-2 mr-sm-2\">\r\n            <InputGroup.Prepend>\r\n            <InputGroup.Text>$</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl onChange={handleChange} name=\"val\" />\r\n        </InputGroup>\r\n        </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Save Changes\r\n        </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n    </>\r\n);\r\n}\r\n\r\n","import React from 'react';\r\nimport {Container, Nav, NavDropdown, Row, Col, Form, Button, Table, DropdownButton, Dropdown} from 'react-bootstrap'\r\nimport {browserHistory} from 'react-router'\r\nimport './NewApplication.styles.css'\r\nimport {TermLoan, HBLoan, PLoan, VHLoan} from './Termloan.modal.jsx'\r\n\r\n\r\nclass NewApplication extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            loantype: \"PLoan\",\r\n            duration: 0,\r\n            loanamt: 0,\r\n            installment: 0,\r\n            frequency: 1,\r\n            showterm: false,\r\n            showhb: false,\r\n            showvh: false,\r\n            durationdisable: false,\r\n            propdetails: \"\",\r\n            addr: \"\",\r\n            val: \"\",\r\n            vehiclemake: \"\",\r\n            dname: \"\",\r\n            AppID: \"\"\r\n\r\n\r\n        }\r\n        this.showmodal = this.showmodal.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.closemodal = this.closemodal.bind(this)\r\n        this.setDuration = this.setDuration.bind(this)\r\n        this.propsetstate = this.propsetstate.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n\r\n    handleSubmit = async(e) =>\r\n    {\r\n        if(this.state.duration == 0){\r\n            alert(\"Please enter loan duration\")\r\n            return\r\n        }\r\n        if(this.state.loanamt == 0){\r\n            alert(\"Loan amount cannot be zero\")\r\n            return\r\n        }\r\n\r\n\r\n        await fetch(this.props.api+'/new_app', {\r\n                                                method: 'post',\r\n                                                headers: {\r\n                                                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                },\r\n                                                body: \"UID=\"+this.props.User+\"&Loanamt=\"+this.state.loanamt+\"&Status=Draft&Duration=\"+this.state.duration+\"&Installment=\"+this.state.installment.toFixed(2)+\"&Frequency=\"+this.state.frequency+\"&Type=\"+this.state.loantype\r\n                                            })\r\n                                            .then(response => response.json())\r\n                                            .then(data =>\r\n                                                {\r\n                                                    console.log(data)\r\n                                                    this.props.setappid(data['AppID']['AppID__max'])\r\n                                                    \r\n                                                    \r\n                                                })\r\n\r\n\r\n                this.setState({\r\n                    AppID: this.props.AppID\r\n                })\r\n                                            \r\n                                \r\n        \r\n\r\n                if(this.loantype == \"PLoan\")\r\n                {\r\n\r\n                fetch(this.props.api+'/add_loandetails', {\r\n                                                        method: 'post',\r\n                                                        headers: {\r\n                                                            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                        },\r\n                                                        body: \"AppID=\"+this.state.AppID\r\n                                                    })\r\n\r\n                                            \r\n                }\r\n                else if(this.loantype == \"HB\")\r\n                {\r\n                    fetch(this.props.api+'/add_loandetails', {\r\n                                                        method: 'post',\r\n                                                        headers: {\r\n                                                            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                        },\r\n                                                        body: \"AppID=\"+this.state.AppID+\"&Duration=\"+this.state.duration+\"&Address_HB=\"+this.state.addr+\"&Valuation_HB=\"+this.state.val\r\n                                                    })\r\n                }\r\n                else\r\n                {\r\n                    //vhloan\r\n                    fetch(this.props.api+'/add_loandetails', {\r\n                                                        method: 'post',\r\n                                                        headers: {\r\n                                                            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                        },\r\n                                                        body: \"AppID=\"+this.state.AppID+\"&Duration=\"+this.state.duration+\"&Vehiclemake_VH=\"+this.state.vehiclemake+\"&Currentval_VH=\"+this.state.val+\"&Dealer_VH=\"+this.state.dname\r\n                                                    })\r\n                }\r\n\r\n        \r\n\r\n\r\n        \r\n        this.props.setloantype(this.state.loantype)\r\n        browserHistory.push(\"/Adetailsnew\")\r\n        \r\n    }\r\n\r\n    propsetstate = (newstate) => {\r\n        console.log(newstate)\r\n        this.setState(newstate)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var inst = this.state.loanamt*1.05/this.state.duration * this.state.frequency\r\n        if(this.state.installment !== inst && this.state.duration !== 0 && this.state.frequency !== \"0\" && this.state.loanamt !== 0){\r\n        this.setState({\r\n            installment: inst\r\n        })\r\n    }\r\n    }\r\n\r\n    setDuration = (dur) =>\r\n    {\r\n        this.setState({\r\n            loantype: \"TERM\",\r\n            duration: dur\r\n        })\r\n\r\n    }\r\n\r\n    closemodal = () =>\r\n     {\r\n         this.setState({\r\n            showterm: false,\r\n            showhb: false,\r\n            showvh: false\r\n         })\r\n     }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    showmodal = (e) =>\r\n    {\r\n    //     if(e.target.value !== \"0\"){\r\n    //         this.setState({\r\n    //             [e.target.value]: true\r\n    //         })\r\n\r\n    // }\r\n    if(e.target.value !== \"showpers\" || e.target.value !== \"0\") {\r\n    this.setState({\r\n        [e.target.value]: true\r\n    })\r\n}\r\n    console.log(this.state)\r\n    }\r\n\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n            <Container fluid style={{height: \"100vh\", width: \"80%\", backgroundColor: \"#ffffff\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n            \r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col className=\"title\" sm=\"12\">\r\n                        <h1>New Loan Application</h1> \r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: \"50px\"}} className=\"justify-content-md-center\">\r\n                    <Col sm=\"3\">\r\n                    <Form>\r\n                    <Form.Row className=\"align-items-center\">\r\n                        <Col xs=\"auto\" className=\"my-1\">\r\n                        \r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            className=\"mr-sm-3\"\r\n                            id=\"inlineFormCustomSelect\"\r\n                            custom\r\n                            onChange={this.showmodal}\r\n                            name=\"loantype\"\r\n                        >\r\n                            \r\n                            <option value=\"showpers\">Personal Loan</option>\r\n                            <option value=\"showterm\">Term Loan</option>\r\n                            <option value=\"showhb\">HB Loan</option>\r\n                            \r\n                            <option value=\"showvh\">Vehicle Loan</option>\r\n                        </Form.Control>\r\n                        </Col>\r\n                        <Col xs=\"auto\" className=\"my-1\">\r\n                        <h1 style={{fontSize: \"23px\"}}>Loan Type</h1>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col sm=\"12\">\r\n                    <Form>\r\n                    <Form.Group controlId=\"formBasicRange\">\r\n                        <Form.Label>Loan Duration:</Form.Label>\r\n                        <Form.Label style={{float: \"right\"}}>{this.state.duration} Months</Form.Label>\r\n                        <Form.Control disabled={this.state.durationdisable} type=\"range\" min=\"1\" max=\"1000\" name=\"duration\" onChange={this.handleChange}/>\r\n                        \r\n                    </Form.Group>\r\n                    </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col sm=\"12\">\r\n                    <Form>\r\n                    <Form.Group controlId=\"formBasicRange\">\r\n                        <Form.Label>Loan Amount:</Form.Label>\r\n                        <Form.Label style={{float: \"right\"}}>Rs.{this.state.loanamt} Lacs</Form.Label>\r\n                        <Form.Control type=\"range\" min=\"1\" max=\"1000\" name=\"loanamt\" onChange={this.handleChange}/>\r\n                        \r\n                    </Form.Group>\r\n                    </Form>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop: \"50px\"}} className=\"justify-content-md-center\">\r\n                <Col sm={11}>\r\n                    <Form.Group>\r\n    \r\n                    \r\n                    <Form.Row className=\"justify-content-md-center\">\r\n                        \r\n                        <Col sm={2}>\r\n                        <Form.Control type=\"text\" disabled value={this.state.installment.toFixed(2)} />\r\n                        </Col>\r\n                        <Form.Label column lg={2}>\r\n                        <h1 style={{fontSize: \"23px\"}}>Installment</h1>\r\n                        </Form.Label>\r\n                    </Form.Row>\r\n                    \r\n                    </Form.Group>\r\n                </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col sm={3}>\r\n                    <Form>\r\n                    <Form.Row className=\"align-items-center\">\r\n                        <Col xs=\"auto\" className=\"my-1\">\r\n                        \r\n                        <Form.Control\r\n                            name=\"frequency\"\r\n                            as=\"select\"\r\n                            className=\"mr-sm-3\"\r\n                            id=\"inlineFormCustomSelect\"\r\n                            custom\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            {/* <option value=\"0\">Choose...</option> */}\r\n                            <option value=\"1\">Monthly</option>\r\n                            <option value=\"4\">Quarterly</option>\r\n                            <option value=\"6\">Half Yearly</option>\r\n                            <option value=\"12\">Yearly</option>\r\n                        </Form.Control>\r\n                        </Col>\r\n                        <Col sm={2} className=\"my-1\">\r\n                        <h1 style={{fontSize: \"23px\"}}>Frequency</h1>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n            <Row style={{paddingTop: \"200px\"}}>\r\n                <Col sm={12}>\r\n                    <Button onClick={this.props.logstate} variant=\"secondary\"><h1 style={{fontSize: \"23px\"}}>Previous</h1></Button>\r\n                    <Button onClick={this.handleSubmit} style={{float: \"right\"}} variant=\"primary\"><h1 style={{fontSize: \"23px\"}}>Next</h1></Button>\r\n                </Col>\r\n            </Row>\r\n            </Container>\r\n            <TermLoan close={this.closemodal} setDuration={this.setDuration} show={this.state.showterm} />\r\n            <HBLoan close={this.closemodal} setstate={this.propsetstate} show={this.state.showhb} />\r\n            <VHLoan close={this.closemodal} show={this.state.showvh} setstate={this.propsetstate} />\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default NewApplication","import React from 'react'\r\nimport {Container, Nav, NavDropdown, Row, Col, Form, Button, Table, DropdownButton, Dropdown, InputGroup, FormControl} from 'react-bootstrap'\r\nimport {browserHistory} from 'react-router'\r\nimport './Asset-details-new.styles.css'\r\n\r\nexport const Typea = (props) => {\r\n    var ann_inc = 0;\r\n    var comp_bonds = 0;\r\n    var debt_mutual_funds = 0;\r\n    var equity_mutual_funds = 0;\r\n    var other_mutual_funds = 0;\r\n    var reason = \"\";\r\n    var fd = 0;\r\n    var td = 0;\r\n    var ic = 0;\r\n    var othercoll = \"\"\r\n    const handleChange = (e) =>{\r\n        if(e.target.name == \"ann_inc\"){\r\n            ann_inc = e.target.value\r\n        }\r\n        if(e.target.name == \"equity_mutual_funds\"){\r\n            equity_mutual_funds = e.target.value\r\n        }\r\n        if(e.target.name == \"debt_mutual_funds\"){\r\n            debt_mutual_funds = e.target.value\r\n        }\r\n        if(e.target.name == \"other_mutual_funds\"){\r\n            other_mutual_funds = e.target.value\r\n        }\r\n        if(e.target.name == \"fd\"){\r\n            fd = e.target.value\r\n        }\r\n        if(e.target.name == \"td\"){\r\n            td = e.target.value\r\n        }\r\n        if(e.target.name == \"ic\"){\r\n            ic = e.target.value\r\n        }\r\n        if(e.target.name == \"othercoll\"){\r\n            othercoll = e.target.value\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault()\r\n        if(reason == \"\"){\r\n            alert(\"Please enter reason\")\r\n        }\r\n        await fetch(props.api+'/add_typea', {\r\n                                                method: 'post',\r\n                                                headers: {\r\n                                                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                },\r\n                                                body: \"AppID=\"+props.AppID+\"&ann_inc=\"+ann_inc+\"&comp_bonds=\"+comp_bonds+\"&debt_mutual_funds=\"+debt_mutual_funds+\"&reason=\"+reason+\"&equity_mutual_funds=\"+equity_mutual_funds+\"&other_mutual_funds=\"+other_mutual_funds\r\n                                            })\r\n\r\n        browserHistory.push('/kyc')\r\n        \r\n    }\r\n\r\n    return (\r\n        <Container fluid style={{ width: \"60%\", backgroundColor: \"#ffffff\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n            <Row>\r\n                <Col  className=\"title\" sm={12}>\r\n                    <h1 >Provide Your Asset Details</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className=\"inp\" sm=\"12\">\r\n                    <Form>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Annual Income (Excluding Tax)\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"ann_inc\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <h1 style={{fontSize: \"23px\"}}>Mutual Funds</h1>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Debt\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"debt_mutual_funds\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Equity\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"equity_mutual_funds\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Other\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"other_mutual_funds\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <h1 style={{fontSize: \"23px\"}}>Equity Share Holdings</h1>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Fixed Deposits\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"fd\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Insurance Contracts\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"ic\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Term Deposits\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"td\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Recurring Deposits\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"debt_mutual_funds\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label column sm={2}>Other Collateral</Form.Label>\r\n                        <Col sm={10}>\r\n                        <Form.Control as=\"textarea\" name=\"othercoll\" onChange={handleChange} rows=\"3\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{padding: \"150px\"}}>\r\n                <Col sm={12}>\r\n                    <Button variant=\"secondary\"><h1 style={{fontSize: \"23px\"}}>Previous</h1></Button>\r\n                    <Button style={{float: \"right\"}} onClick={handleSubmit} variant=\"primary\"><h1 style={{fontSize: \"23px\"}}>Next</h1></Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport const Typeb = (props) => {\r\n    var ann_inc = 0;\r\n    var comp_bonds = 0;\r\n    var debt_mutual_funds = 0;\r\n    var reason = \"\";\r\n    const handleChange = (e) =>{\r\n        if(e.target.name == \"ann_inc\"){\r\n            ann_inc = e.target.value\r\n        }\r\n        if(e.target.name == \"comp_bonds\"){\r\n            comp_bonds = e.target.value\r\n        }\r\n        if(e.target.name == \"debt_mutual_funds\"){\r\n            debt_mutual_funds = e.target.value\r\n        }\r\n        if(e.target.name == \"reason\"){\r\n            reason = e.target.value\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault()\r\n        if(reason == \"\"){\r\n            alert(\"Please enter reason\")\r\n            return\r\n        }\r\n        await fetch(props.api+'/add_typeb', {\r\n                                                method: 'post',\r\n                                                headers: {\r\n                                                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                },\r\n                                                body: \"AppID=\"+props.AppID+\"&ann_inc=\"+ann_inc+\"&comp_bonds=\"+comp_bonds+\"&debt_mutual_funds=\"+debt_mutual_funds+\"&reason=\"+reason\r\n                                            })\r\n        \r\n        browserHistory.push('/kyc')\r\n\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <Container fluid style={{height: \"100vh\", width: \"60%\", backgroundColor: \"#ffffff\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n            <Row>\r\n                <Col  className=\"title\" sm={12}>\r\n                    <h1 >Provide Your Asset Details</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col className=\"inp\" sm=\"12\">\r\n                    <Form>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Annual Income (Excluding Tax)\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"ann_inc\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Company Bonds\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"comp_bonds\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label column sm={2}>\r\n                        Debt Mutual Funds\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl id=\"inlineFormInputGroupUsername\" name=\"debt_mutual_funds\" onChange={handleChange} placeholder=\"Amount\" />\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label column sm={2}>Reason</Form.Label>\r\n                        <Col sm={10}>\r\n                        <Form.Control as=\"textarea\" name=\"reason\" onChange={handleChange} rows=\"3\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{padding: \"150px\"}}>\r\n                <Col sm={12}>\r\n                    <Button variant=\"secondary\"><h1 style={{fontSize: \"23px\"}}>Previous</h1></Button>\r\n                    <Button style={{float: \"right\"}} onClick={handleSubmit} variant=\"primary\"><h1 style={{fontSize: \"23px\"}}>Next</h1></Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport {Modal, Button, Form, Col} from 'react-bootstrap'\r\n\r\nconst VerifyAadhar = (props) => {\r\n  \r\n    const handleClose = () => props.closemodal();\r\n    var otp = \"\"\r\n    const handleChange = (e) =>\r\n    {\r\n        otp = e.target.value\r\n    }\r\n\r\n    const handleSubmit = (e) =>\r\n    {\r\n        if(otp == \"12345\"){\r\n            props.verified();\r\n        }\r\n        else{\r\n            alert(\"Incorrect OTP. Correct OTP is 12345.\")\r\n        }\r\n    }\r\n  \r\n    return (\r\n      <>\r\n  \r\n        <Modal show={props.showmodal} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Verify Aadhaar</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Enter the OTP sent to your registered phone number:\r\n\r\n          <Form style={{paddingTop: \"5px\"}}>\r\n                <Form.Row className=\"align-items-center\">\r\n                    <Col sm={6}>\r\n                    \r\n                    <Form.Control\r\n                        className=\"mb-2\"\r\n                        id=\"inlineFormInput\"\r\n                        placeholder=\"Enter OTP\"\r\n                        name=\"aadhaar\"\r\n                        \r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    </Col>\r\n                    \r\n                    \r\n                    <Col sm={4}>\r\n                    <Button type=\"button\" onClick={handleSubmit} className=\"mb-2\">\r\n                        Verify\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n                </Form>\r\n          </Modal.Body>\r\n          \r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\nexport default VerifyAadhar;","import React from 'react'\r\nimport {Container, Alert, Nav, NavDropdown, Row, Col, Form, Button, Table, DropdownButton, Dropdown} from 'react-bootstrap'\r\nimport {browserHistory} from 'react-router'\r\nimport './kyc.styles.css'\r\nimport VerifyAadhar from './verifyaadhar.component'\r\n\r\nclass Kyc extends React.Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            aadhaar: \"\",\r\n            pan: \"\",\r\n            passport: \"\",\r\n            isadharverified: false,\r\n            name: \"\",\r\n            addrline1: \"\",\r\n            addrline2: \"\",\r\n            city: \"\",\r\n            district: \"\",\r\n            state: \"\",\r\n            PIN: \"\",\r\n            dob: \"\",\r\n            caddrline1: \"\",\r\n            caddrline2: \"\",\r\n            ccity: \"\",\r\n            cdistrict: \"\",\r\n            cstate: \"\",\r\n            cPIN: \"\",\r\n            fetched: false,\r\n            showmodal: false\r\n        }\r\n\r\n        //fetch account details\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.verifypassport = this.verifypassport.bind(this);\r\n        this.verifyaadhaar = this.verifyaadhaar.bind(this);\r\n        this.closemodal = this.closemodal.bind(this);\r\n        this.aadharverified = this.aadharverified.bind(this);\r\n        this.verifypan = this.verifypan.bind(this);\r\n        this.savedetails = this.savedetails.bind(this);\r\n        this.fetchdetails = this.fetchdetails.bind(this);\r\n        document.title = \"KYC Process\"\r\n    }\r\n\r\n    fetchdetails = () => {\r\n        \r\n        fetch('https://randomuser.me/api/').then(response => response.json()).then(data => data['results'][0]).then(resp => \r\n        this.setState({\r\n            name: this.props.fname+\" \"+this.props.lname,\r\n            addrline1: resp.location.street.number+\", \"+resp.location.street.name,\r\n            city: resp.location.city,\r\n            district: \"Example District\",\r\n            state: resp.location.state,\r\n            PIN: resp.location.postcode,\r\n            dob: resp.dob.date.slice(0, 10),\r\n            caddrline1: resp.location.street.number+\", \"+resp.location.street.name,\r\n            ccity: resp.location.city,\r\n            cdistrict: \"Example District\",\r\n            cstate: resp.location.state,\r\n            cPIN: resp.location.postcode\r\n\r\n\r\n\r\n        })\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n    savedetails = async(e) =>\r\n    {\r\n        //save to db\r\n        const data = new FormData();\r\n        data.append('AppID', this.props.AppID)\r\n        data.append('name', this.state.name)\r\n        data.append('addrline1', this.state.addrline1)\r\n        data.append('addrline2', this.state.addrline2)\r\n        data.append('city', this.state.city)\r\n        data.append('district', this.state.district)\r\n        data.append('state', this.state.state)\r\n        data.append('PIN', this.state.PIN)\r\n        data.append('caddrline1', this.state.caddrline1)\r\n        data.append('caddrline2', this.state.caddrline2)\r\n        data.append('ccity', this.state.ccity)\r\n        data.append('cdistrict', this.state.cdistrict)\r\n        data.append('cstate', this.state.cstate)\r\n        data.append('cPIN', this.state.cPIN)\r\n        await fetch(this.props.api+'/add_kyc', {\r\n            method: 'post',\r\n            body: data\r\n        })\r\n        //push(summary) if aadharverified else push(documentupload)\r\n        if(this.state.isadharverified == true)\r\n        {\r\n            await this.props.setverified();\r\n            browserHistory.push('/summary');\r\n            \r\n\r\n        }\r\n        else{\r\n            browserHistory.push('/docupl')\r\n        }\r\n    } \r\n\r\n\r\n    verifypan = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        if(this.state.pan == \"\")\r\n        {\r\n            alert(\"Please enter PAN\")\r\n            return\r\n        }\r\n        this.setState({\r\n            fetched: true\r\n        })\r\n        this.fetchdetails();\r\n        \r\n        //fetch aadhaar details and verify\r\n        document.getElementById('cont').style.height=\"100%\"\r\n    }\r\n\r\n    aadharverified = (e) =>\r\n    {\r\n        this.setState({\r\n            isadharverified: true,\r\n            fetched: true\r\n        })\r\n        this.closemodal()\r\n        this.fetchdetails();\r\n        //fetch aadhaar details and verify\r\n        document.getElementById('cont').style.height=\"100%\"\r\n    }\r\n\r\n    verifyaadhaar = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        if(this.state.aadhaar == \"\")\r\n        {\r\n            alert(\"Please enter Aadhaar number\")\r\n            return\r\n        }\r\n        this.setState({\r\n            showmodal: true\r\n        })\r\n        \r\n    }\r\n\r\n    closemodal = (e) =>\r\n    {\r\n        this.setState({\r\n            showmodal: false\r\n        })\r\n    }\r\n\r\n    verifypassport = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        if(this.state.passport == \"\")\r\n        {\r\n            alert(\"Please enter Passport number\")\r\n            return\r\n        }\r\n        this.setState({\r\n            fetched: true\r\n        })\r\n        this.fetchdetails();\r\n        //fetch passport details and verify\r\n\r\n        document.getElementById('cont').style.height=\"100%\"\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        \r\n\r\n        return (\r\n        <>\r\n\r\n            <VerifyAadhar showmodal={this.state.showmodal} verified={this.aadharverified} closemodal={this.closemodal} />\r\n            <Container id=\"cont\" fluid style={{height: \"100vh\", width: \"80%\", backgroundColor: \"#ffffff\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n            <Row className=\"justify-content-md-center\">\r\n                    <Col style={{paddingTop: \"55px\", textAlign: \"center\"}} sm=\"12\">\r\n                        <h1>KYC Verification</h1> \r\n                    </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col style={{textAlign: \"center\"}} sm={12}>\r\n                <Alert variant=\"warning\">\r\n                    DISCLAIMER: Customers can verify themselves using Aadhaar, PAN or Passport number. Using Aadhaar is recommended for easy verification.\r\n                </Alert>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"centeredcol\" sm={12}>\r\n                <Form>\r\n                <Form.Row className=\"align-items-center\">\r\n                    <Col xs=\"auto\">\r\n                    \r\n                    <Form.Control\r\n                        className=\"mb-2\"\r\n                        id=\"inlineFormInput\"\r\n                        placeholder=\"Aadhaar UID\"\r\n                        name=\"aadhaar\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n                    </Col>\r\n                    \r\n                    \r\n                    <Col xs=\"auto\">\r\n                    <Button type=\"submit\" onClick={this.verifyaadhaar} className=\"mb-2\">\r\n                        Verify\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n                </Form>\r\n                </Col>\r\n                <Col className=\"centeredcol\" sm={12}>\r\n                <Form>\r\n                <Form.Row className=\"align-items-center\">\r\n                    <Col xs=\"auto\">\r\n                    \r\n                    <Form.Control\r\n                        className=\"mb-2\"\r\n                        id=\"inlineFormInput\"\r\n                        placeholder=\"PAN\"\r\n                        name=\"pan\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n                    </Col>\r\n                    \r\n                    \r\n                    <Col xs=\"auto\">\r\n                    <Button type=\"submit\" onClick={this.verifypan} className=\"mb-2\">\r\n                        Verify\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n                </Form>\r\n                </Col>\r\n                <Col className=\"centeredcol\" sm={12}>\r\n                <Form>\r\n                <Form.Row className=\"align-items-center\">\r\n                    <Col xs=\"auto\">\r\n                    \r\n                    <Form.Control\r\n                        className=\"mb-2\"\r\n                        id=\"inlineFormInput\"\r\n                        placeholder=\"Passport Number\"\r\n                        name=\"passport\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n                    </Col>\r\n                    \r\n                    \r\n                    <Col xs=\"auto\">\r\n                    <Button type=\"submit\" onClick={this.verifypassport} className=\"mb-2\">\r\n                        Verify\r\n                    </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n                </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row hidden={!this.state.fetched}>\r\n                <Col style={{paddingTop: \"55px\", textAlign: \"center\"}} sm=\"12\">\r\n                            <h1>Details</h1> \r\n                </Col>\r\n                <Col sm=\"12\" style={{textAlign: \"center\"}}>\r\n                <Alert variant=\"warning\">\r\n                    DISCLAIMER: In case correspondence address is different than permanent address, customer has to upload supporting documents on the next page.\r\n                </Alert>\r\n                </Col>\r\n                <Col sm={12}>\r\n                <Form>\r\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                    <Form.Label column sm={2}>\r\n                    Name\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.name} disabled/>\r\n                    </Col>\r\n                </Form.Group>\r\n                \r\n                <h3>Permanent Address</h3>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    Address Line 1 \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.addrline1} disabled/>\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    Address Line 2 \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.addrline2} disabled/>\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    City\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.city} disabled/>\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    District \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.district} disabled/>\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    State \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.state} disabled/>\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    PIN \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.PIN} disabled/>\r\n                    </Col>\r\n                </Form.Group>\r\n                \r\n                <h3>Correspondence Address</h3>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    Address Line 1 \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control value={this.state.caddrline1} type=\"text\" />\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    Address Line 2 \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.caddrline2} />\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    City\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.ccity} />\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    District \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.cdistrict} />\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    State \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.cstate} />\r\n                    </Col>\r\n                    </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    PIN \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.cPIN} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <hr/>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    DOB\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" value={this.state.dob} disabled/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"formHorizontalPassword\">\r\n                    <Form.Label column sm={2}>\r\n                    Phone \r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                    <Form.Control type=\"text\" />\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Col sm=\"12\" style={{textAlign: \"center\"}}>\r\n                <Alert variant=\"warning\">\r\n                    DISCLAIMER: All fields may not populate automatically if PAN/Passport is used for verification. Please fill them manually.\r\n                </Alert>\r\n                </Col>\r\n\r\n                \r\n                \r\n\r\n                <Form.Group as={Row}>\r\n                    <Col sm={{ span: 10, offset: 2 }}>\r\n                    <Button type=\"button\" onClick={this.savedetails}>NEXT</Button>\r\n                    </Col>\r\n                </Form.Group>\r\n                </Form>\r\n                </Col>\r\n            </Row>\r\n            </Container>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Kyc;\r\n","import React from 'react'\r\nimport {Container,Input, Alert, Nav, NavDropdown, Row, Col, Form, Button, Table, DropdownButton, Dropdown} from 'react-bootstrap'\r\nimport {browserHistory} from 'react-router'\r\n\r\nclass DocUpload extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            addressproof: \"\",\r\n            photo: \"\",\r\n        }\r\n\r\n        this.savedetails = this.savedetails.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        document.title = \"Upload Documents\"\r\n    \r\n    }\r\n\r\n\r\n    savedetails = async(e) =>\r\n    {\r\n        console.log(this.state)\r\n        if(this.state.addressproof == \"\"){\r\n            alert(\"Please upload address proof\")\r\n            return\r\n        }\r\n        if(this.state.photo == \"\"){\r\n            alert(\"Please upload photo\")\r\n            return\r\n        }\r\n\r\n        var uploadData = new FormData();\r\n        uploadData.append('AppID', this.props.AppID);\r\n        uploadData.append('Type', 'addr')\r\n        uploadData.append('File', this.state.addressproof)\r\n        await fetch(this.props.api+'/upload', {\r\n                                                method: 'post',\r\n                                                body: uploadData\r\n                                            })\r\n\r\n        uploadData = new FormData();\r\n        uploadData.append('AppID', this.props.AppID);\r\n        uploadData.append('Type', 'photo')\r\n        uploadData.append('File', this.state.photo)\r\n        await fetch(this.props.api+'/upload', {\r\n                                                method: 'post',\r\n                                                body: uploadData\r\n                                            })\r\n        browserHistory.push(\"/Summary\")\r\n    }\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        let ext = e.target.value.match(/\\.([^\\.]+)$/)[1];\r\n        switch (ext) {\r\n            case 'jpg':\r\n            case 'bmp':\r\n            case 'png':\r\n            case 'tif':\r\n            case 'jpeg':\r\n                break;\r\n            default:\r\n                alert('File type not allowed');\r\n                e.target.value = \"\"\r\n                this.setState({\r\n                    [e.target.id]: \"\"\r\n                })\r\n                return\r\n        }\r\n        this.setState({\r\n            [e.target.id]: e.target.files[0]\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <Container fluid style={{height: \"100vh\", width: \"60%\", backgroundColor: \"#ffffff\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col style={{paddingTop: \"55px\", textAlign: \"center\"}} sm=\"12\">\r\n                        <h1>Upload Supporting Documents</h1> \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={6}>\r\n                    <Form style={{padding: \"50px\"}}>\r\n                    <Form.Label>\r\n                    Address Proof: \r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type=\"file\"\r\n                        id=\"addressproof\"\r\n                        label={this.state.addressproof}\r\n                        onChange={this.handleChange}\r\n                        accept=\"image/*\"\r\n                    />\r\n                    \r\n                    </Form >\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                    <Form style={{padding: \"50px\"}}>\r\n                    <Form.Label>\r\n                    Photo: \r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        id=\"photo\"\r\n                        type=\"file\"\r\n                        label={this.state.photo}\r\n                        onChange={this.handleChange}\r\n                        accept=\"image/*\"\r\n                    />\r\n                    </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row >\r\n                    <Col style={{paddingTop: \"35px\", textAlign: \"center\"}} sm=\"12\">\r\n                        <Button type=\"button\" onClick={this.savedetails}>NEXT</Button>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DocUpload","import React from 'react'\r\nimport {Container, Spinner, Alert, Nav, NavDropdown, Row, Col, Form, Button, Table, DropdownButton, Dropdown} from 'react-bootstrap'\r\nimport {browserHistory} from 'react-router'\r\nimport './summary.style.css'\r\n\r\n\r\n\r\nclass Summary extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.typeconv = {\r\n            'PLoan': 'Personal',\r\n            'VH': 'Vehicle',\r\n            'HB': 'House',\r\n            'TERM': 'Term'\r\n        }\r\n        this.freqconv = {\r\n            '1': 'Monthly',\r\n            '4': 'Quartlery',\r\n            '6': 'Half Yearly',\r\n            '12': 'Yearly'\r\n        }\r\n        this.kyclableconv = {\r\n            'name': \"Name:\",\r\n            'addrline1': \"Address Line 1:\",\r\n            'addrline2': \"Address Line 2:\",\r\n            'city': \"City:\",\r\n            'district': \"District:\",\r\n            'state': \"State:\",\r\n            'PIN': \"PIN:\",\r\n            'dob': \"Date of Birth:\",\r\n            'caddrline1': \"Address Line 1:\",\r\n            'caddrline2': \"Address Line 2:\",\r\n            'ccity': \"City:\",\r\n            'cdistrict': \"District:\",\r\n            'cstate': \"State:\",\r\n            'cPIN': \"PIN:\",\r\n        }\r\n        this.state = {\r\n            record: \"\",\r\n            kycinfo : \"\",\r\n            docs : \"\",\r\n            docfetched: false,\r\n            photo: \"\",\r\n            cnfrm : false\r\n        }\r\n\r\n        \r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        \r\n        this.addrproof = \"\"\r\n        this.photo = \"\"\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            cnfrm: !this.state.cnfrm\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(this.props.api+'/get_app?AppID='+this.props.AppID)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n           record: data['Record'][0]}))\r\n        fetch(this.props.api+'/get_kycinfo?AppID='+this.props.AppID)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            kycinfo: data}))\r\n            \r\n        fetch(this.props.api+'/get_docs?AppID='+this.props.AppID)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            docs: data,\r\n            docfetched: true}))\r\n        \r\n\r\n        // .then( () => {\r\n        //     import (`D:/Projects/PycharmProjects/loanapp/loanapp/media/${this.state.docs.addr}`)\r\n        //     .then(image => this.setState({\r\n        //         addr: image\r\n        //     }))\r\n\r\n        //     import (\"D:/Projects/PycharmProjects/loanapp/loanapp/media/\"+this.state.docs.photo)\r\n        //     .then(image => this.setState({\r\n        //         photo: image\r\n        //     }))\r\n\r\n            \r\n        \r\n        //     }\r\n\r\n        // )\r\n        \r\n        console.log(\"mounted\")\r\n        document.title = \"Application Summary\"\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = async(e) => {\r\n        e.preventDefault()\r\n        if(!this.state.cnfrm){\r\n            alert(\"Please accept terms and conditons\")\r\n            return\r\n        }\r\n        console.log(this.state)\r\n        await fetch(this.props.api+'/update_app', {\r\n                                                        method: 'post',\r\n                                                        headers: {\r\n                                                            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                                        },\r\n                                                        body: \"AppID=\"+this.state.record.AppID+\"&newStatus=Filed\"\r\n                                                    })\r\n        browserHistory.push(\"/dashboard\")\r\n\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        let addr =  <Spinner animation=\"border\" />\r\n        let photo = <Spinner animation=\"border\" />\r\n        if (this.state.docs !== \"\" || this.state.docs.Status === \"OK\"){\r\n            addr = <img src={this.props.api+\"/media/\"+this.state.docs.addr} width=\"223\" height=\"223\" />\r\n            photo = <img src={this.props.api+\"/media/\"+this.state.docs.photo} width=\"223\" height=\"223\" />\r\n               \r\n         }\r\n         \r\n        return (\r\n            <>\r\n            <Container fluid style={{paddingBottom: \"50px\", height: \"100%\", width: \"80%\", backgroundColor: \"#ffffff\", boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2)\"}}>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col style={{paddingTop: \"55px\", textAlign: \"center\"}} sm=\"12\">\r\n                        <h1>Summary</h1> \r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row className=\"summarypage\">\r\n                    <Form>\r\n                    <Form.Group as={Row} controlId=\"summarygroup1\">\r\n                        <Form.Label column sm=\"2\">\r\n                        Application ID:\r\n                        </Form.Label>\r\n                        <Col sm=\"2\">\r\n                        <Form.Control plaintext readOnly value={this.state.record.AppID} />\r\n                        </Col>\r\n                        <Form.Label column sm=\"2\">\r\n                        Type:\r\n                        </Form.Label>\r\n                        <Col sm=\"2\">\r\n                        <Form.Control plaintext readOnly value={this.typeconv[this.state.record.Type]} />\r\n                        </Col>\r\n                        <Form.Label column sm=\"2\">\r\n                        Amount:\r\n                        </Form.Label>\r\n                        <Col sm=\"2\">\r\n                        <Form.Control plaintext readOnly value={this.state.record.Loanamt+\" Lacs\"} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"summarygroup2\">\r\n                        <Form.Label column sm=\"2\">\r\n                        Duration:\r\n                        </Form.Label>\r\n                        <Col sm=\"2\">\r\n                        <Form.Control plaintext readOnly value={this.state.record.Duration+\" Months\"} />\r\n                        </Col>\r\n                        <Form.Label column sm=\"2\">\r\n                        Installment:\r\n                        </Form.Label>\r\n                        <Col sm=\"2\">\r\n                        <Form.Control plaintext readOnly value={this.freqconv[this.state.record.Frequency]} />\r\n                        </Col>\r\n                        <Form.Label column sm=\"2\">\r\n                        Installment Amount:\r\n                        </Form.Label>\r\n                        <Col sm=\"2\">\r\n                        <Form.Control plaintext readOnly value={this.state.record.Installment+\" Lacs\"} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <h1 style={{fontSize: \"25px\", textAlign:\"center\"}}>Customer Information</h1>\r\n                    <Form.Group as={Row} controlId=\"summarygroup2\">\r\n                        {\r\n                            [\r\n                                'name',\r\n                                \r\n                            ].map(key => (\r\n                                <>\r\n                                <Form.Label column sm=\"1\">\r\n                                {this.kyclableconv[key]}\r\n                                </Form.Label>\r\n                                <Col sm=\"2\">\r\n                                <Form.Control plaintext readOnly value={this.state.kycinfo[key]} />\r\n                                </Col>\r\n                                </>\r\n                            ))\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group hidden={this.props.verified} as={Row} controlId=\"summarygroup2\">\r\n                        <Form.Label column sm=\"2\">\r\n                        Address Proof:\r\n                        </Form.Label>\r\n                        <Col sm=\"3\">\r\n                        \r\n                        {addr}\r\n                        \r\n                        </Col>\r\n                        <Form.Label column sm=\"2\">\r\n                        Photo:\r\n                        </Form.Label>\r\n                        <Col sm=\"2\">\r\n                        {photo}\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    \r\n                    <h1 style={{fontSize: \"25px\"}}>Permanent Address</h1>\r\n                    <Form.Group as={Row} controlId=\"summarygroup2\">\r\n                        {\r\n                            [\r\n                                'addrline1',\r\n                                'addrline2',\r\n                                'city'\r\n                                \r\n                            ].map(key => (\r\n                                <>\r\n                                <Form.Label column sm=\"2\">\r\n                                {this.kyclableconv[key]}\r\n                                </Form.Label>\r\n                                <Col sm=\"2\">\r\n                                <Form.Control plaintext readOnly value={this.state.kycinfo[key]} />\r\n                                </Col>\r\n                                </>\r\n                            ))\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"summarygroup2\">\r\n                        {\r\n                            [\r\n                                \r\n            \r\n                            'district',\r\n                            'state',\r\n                            'PIN',\r\n                            \r\n                                \r\n                            ].map(key => (\r\n                                <>\r\n                                <Form.Label column sm=\"2\">\r\n                                {this.kyclableconv[key]}\r\n                                </Form.Label>\r\n                                <Col sm=\"2\">\r\n                                <Form.Control plaintext readOnly value={this.state.kycinfo[key]} />\r\n                                </Col>\r\n                                </>\r\n                            ))\r\n                        }\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <h1 style={{fontSize: \"25px\"}}>Correspondence Address</h1>\r\n                    <Form.Group as={Row} controlId=\"summarygroup2\">\r\n                        {\r\n                            [\r\n                                'caddrline1',\r\n                                'caddrline2',\r\n                                'ccity',\r\n                                'cdistrict',\r\n                                'cstate',\r\n                                'cPIN',\r\n                                \r\n                            ].map(key => (\r\n                                <>\r\n                                <Form.Label column sm=\"2\">\r\n                                {this.kyclableconv[key]}\r\n                                </Form.Label>\r\n                                <Col sm=\"2\">\r\n                                <Form.Control plaintext readOnly value={this.state.kycinfo[key]} />\r\n                                </Col>\r\n                                </>\r\n                            ))\r\n                        }\r\n                    </Form.Group>\r\n                    {/* <Form.Group as={Row} controlId=\"summarygroup2\">\r\n                        {\r\n                            [\r\n                                'name',\r\n                                'addrline1',\r\n                                'addrline2',\r\n                                \r\n                            ].map(key => (\r\n                                <>\r\n                                <Form.Label column sm=\"2\">\r\n                                {key}\r\n                                </Form.Label>\r\n                                <Col sm=\"2\">\r\n                                <Form.Control plaintext readOnly value={this.state.kycinfo[key]} />\r\n                                </Col>\r\n                                </>\r\n                            ))\r\n                        }\r\n                    </Form.Group> */}\r\n                    </Form>\r\n                    \r\n                </Row>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col style={{paddingTop: \"55px\", textAlign: \"center\"}}>\r\n                    <Alert hidden={this.props.verified} variant=\"warning\" style={{marginLeft: \"5%\", marginRight: \"5%\"}}>\r\n                        KYC not complete. Application will be referred to BRM for further processing.\r\n                    </Alert>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col style={{paddingTop: \"5px\", textAlign: \"center\"}}>\r\n                    <Form.Group >\r\n                        <Form.Check onChange={this.handleChange} type=\"checkbox\" id=\"cnfrm\" label=\"I agree to the terms and conditions.\" />\r\n                    </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row >\r\n                    <Col style={{paddingTop: \"35px\", textAlign: \"center\"}} sm=\"12\">\r\n                        <Button type=\"button\" onClick={this.handleSubmit}>Submit Application</Button>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Summary;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Homepage from './Pages/Homepage/Homepage';\nimport {Container, Fade, Nav, NavDropdown} from 'react-bootstrap'\nimport Navbar from 'react-bootstrap/Navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Components/Header/Header'\nimport Signin from './Components/sign-in/sign-in.component'\nimport {Router, Route, browserHistory} from 'react-router';\nimport Adetails from './Pages/asset-details/Asset-details.component'\nimport {Redirect} from 'react-router-dom'\nimport Pdetails from './Pages/personal-details/Personal-details.component'\nimport Dashboard from './Pages/Dashboard/Dashboard.component'\nimport NewApplication from './Pages/NewApplication/NewApplication.component'\nimport {Typea, Typeb} from './Pages/asset-details/Asset-details-new.component'\nimport Kyc from './Pages/KYC/kyc.component'\nimport DocUpload from './Pages/DocumentUpload/docupload.component'\nimport Summary from './Pages/Summary/summary.component'\n\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      Token : \"\",\n      User: \"\",\n      fname: \"\",\n      lname: \"\",\n      phone: \"\",\n      dob: \"\",\n      loantype: \"\",\n      AppID: \"\",\n      verified: false,\n      api: \"http://127.0.0.1:8000\"\n    };\n\n    \n    \n      \n    \n\n    \n\n    this.setToken = this.setToken.bind(this);\n    this.setUser = this.setUser.bind(this);\n    this.refresh = this.refresh.bind(this);\n    this.setPdetails = this.setPdetails.bind(this);\n    this.logstate = this.logstate.bind(this);\n    this.setloantype = this.setloantype.bind(this);\n    this.setappid = this.setappid.bind(this);\n    this.setverified = this.setverified.bind(this);\n  }\n\n  componentDidMount(){\n    const tok = localStorage.getItem('Token')\n    if(tok)\n    {\n    this.setState({Token: tok,\n                    User: localStorage.getItem('User')},\n                    () => {\n\n                      fetch(this.state.api+\"/get_usr/?UID=\"+this.state.User)\n                      .then(response => response.json())\n                      .then(data => {\n                      if(data[\"Status\"] == \"OK\")\n                        {\n                          \n                            this.setState( { fname: data['Record'][0]['Firstname'],\n                                             lname: data['Record'][0]['Lastname']\n                                            },\n                                            () => {console.log(data)}\n                                         )\n                          }\n                                    }\n                            )\n\n                    })\n    \n    \n        \n      \n    \n    }\n  }\n\n\n\n\n  setverified = () =>\n  {\n    this.setState({\n      verified: true\n    })\n    \n  }\n\n  setloantype = (loantype) =>\n  {\n    this.setState({\n      loantype: loantype\n    })\n  }\n\n  setappid = (appid) =>\n  {\n    this.setState({\n      AppID: appid\n    })\n  }\n\n  setPdetails = (details) =>\n  {\n    this.setState(details)\n  }\n\n  logstate = () =>\n  {\n    console.log(this.state)\n  }\n  refresh = () =>\n  {\n    fetch(this.state.api+\"/get_usr/?UID=\"+this.state.User)\n    .then(response => response.json())\n    .then(data => {\n      if(data[\"Status\"] == \"OK\")\n      {\n        this.setState(\n        {\n          fname: data['Record'][0]['Firstname'],\n          lname: data['Record'][0]['Lastname']\n        }\n      )}\n    }\n      )\n  }\n\n  \n\n  \n\n\n  setToken = (token) => {\n    this.setState({\n      Token: \"Token \"+token\n    })\n    localStorage.setItem('Token', this.state.Token)\n    \n  }\n\n  setUser = (user) =>\n  {\n    this.setState({\n      User: user\n    })\n    localStorage.setItem('User', this.state.User)\n    fetch(this.state.api+\"/get_usr/?UID=\"+this.state.User)\n    .then(response => response.json())\n    .then(data => {\n      if(data[\"Status\"] == \"OK\")\n      {\n        this.setState(\n        {\n          fname: data['Record'][0]['Firstname']\n        }\n      )}\n    }\n      )\n    \n\n  }\n\n  render()\n  {\n    \n    \n    return (\n\n\n      <div style={{backgroundColor: \"#d5dbe3\", paddingLeft:\"5%\", paddingRight: \"5%\"}}>\n          \n          <Header setToken={this.setToken} setUser={this.setUser} user={this.state.User} {...this.state} token={this.state.Token} refresh={this.refresh} fname={this.state.fname} />\n          <Router history = {browserHistory}>\n            \n            <Route exact path='/' component={() => <Homepage user={this.state.User} {...this.state} token={this.state.Token} setToken={this.setToken} setUser={this.setUser} />} />\n            <Route exact path=\"/Pdetails\" component={() => <Pdetails user={this.state.User} token={this.state.Token} {...this.state} setPdetails={this.setPdetails} complete={this.state.pdetails} refresh={this.refresh} />} />\n            <Route exact path=\"/Adetails\" component={() => <Adetails logstate={this.logstate} {...this.state} />} />\n            <Route exact path=\"/dashboard\" component={() => <Dashboard logstate={this.logstate} {...this.state} />} />\n            \n            <Route exact path=\"/newapp\" component={() => <NewApplication logstate={this.logstate} {...this.state} setloantype={this.setloantype} setappid={this.setappid} />} />\n            <Route exact path=\"/typea\" component={() => <Typea logstate={this.logstate} {...this.state} />} />\n            <Route exact path=\"/typeb\" component={() => <Typeb logstate={this.logstate} {...this.state} />} />\n            <Route exact path=\"/Adetailsnew\" component={() => this.state.loantype === \"HB\" ? <Typea logstate={this.logstate} {...this.state} /> : <Typeb logstate={this.logstate} {...this.state} />} />\n            <Route exact path=\"/kyc\" component={() => <Kyc logstate={this.logstate} {...this.state} setverified={this.setverified} />} />\n            <Route exact path=\"/docupl\" component={() => <DocUpload logstate={this.logstate} {...this.state} />} />\n            <Route exact path=\"/summary\" component={() => <Summary logstate={this.logstate} {...this.state} />} />\n            \n          </Router>\n          \n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}